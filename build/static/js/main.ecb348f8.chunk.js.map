{"version":3,"sources":["components/ReactMapbox.js","index.js"],"names":["Map","ReactMapboxGl","accessToken","locationStyle","backgroundColor","borderRadius","width","height","border","markStyle","ReactMapbox","showPopup","togglePopup","useState","location","setLocation","latitude","longitude","markers","setMarkers","useEffect","navigator","geolocation","getCurrentPosition","e","coords","firebase","database","ref","on","async","snapshot","val","result","Object","keys","map","key","console","log","setInterval","child","productSub","set","currentLocation","err","style","containerStyle","center","movingMethod","coordinates","m","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","querySelector"],"mappings":"yLAQA,MAAMA,EAAMC,YAAc,CACtBC,YACI,kGAGFC,EAAgB,CAClBC,gBAAiB,QACjBC,aAAc,MACdC,MAAO,OACPC,OAAQ,OACRC,OAAQ,wBAGNC,EAAY,CACdL,gBAAiB,UACjBC,aAAc,MACdC,MAAO,OACPC,OAAQ,OACRC,OAAQ,qBAgGGE,MA7FK,KAChB,MAAOC,EAAWC,GAAeC,oBAAS,IAEnCC,EAAUC,GAAeF,mBAAS,CACrCG,SAAU,EACVC,UAAW,KAGRC,EAASC,GAAcN,mBAAS,IA0DvC,OAxDAO,qBAAU,KACNC,UAAUC,YAAYC,oBAAoBC,IACtCT,EAAY,CACRE,UAAWO,EAAEC,OAAOR,UACpBD,SAAUQ,EAAEC,OAAOT,gBAG5B,IAEHI,qBAAU,KACNM,IACKC,WACAC,IAAI,YACJC,GAAG,SAASC,UACT,GAAuB,OAAnBC,EAASC,MAAgB,CACzB,MAAMC,QAAeC,OAAOC,KAAKJ,EAASC,OAAOI,KAC5CC,GAAQN,EAASC,MAAMK,KAE5BC,QAAQC,IAAIN,GACZd,EAAWc,QAEXK,QAAQC,IAAI,6BAGzB,IAEHnB,qBAAU,KACNoB,aAAY,KACRnB,UAAUC,YAAYC,oBAAoBC,IACtCE,IACKC,WACAC,MACAa,MAAM,YACNA,MAAMpB,UAAUqB,YAChBC,IACG,CACIC,gBAAiB,CACb3B,UAAWO,EAAEC,OAAOR,UACpBD,SAAUQ,EAAEC,OAAOT,YAG1B6B,IACOA,EACAP,QAAQC,IACJ,6CACAM,GAGJP,QAAQC,IAAI,2BAKjC,OACJ,IAGC,eAACvC,EAAD,CACI8C,MAAM,oCACNC,eAAgB,CACZxC,OAAQ,QACRD,MAAO,QAEX0C,OAAQ,CAAClC,EAASG,UAAWH,EAASE,UACtCiC,aAAa,SAPjB,UASI,cAAC,IAAD,CAAQC,YAAa,CAACpC,EAASG,UAAWH,EAASE,UAAnD,SACI,qBAAK8B,MAAO3C,MAEfe,EAAQkB,KAAKe,GACV,cAAC,IAAD,CACID,YAAa,CACTC,EAAEP,gBAAgB3B,UAClBkC,EAAEP,gBAAgB5B,UAH1B,SAMI,qBAAK8B,MAAOrC,YC7FhCiB,IAAS0B,cAZY,CACjBC,OAAQ,0CACRC,WAAY,iDACZC,YAAa,wDACbC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMnBC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,cAAc,Y","file":"static/js/main.ecb348f8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactMapboxGl, { Marker, Layer, Feature } from \"react-mapbox-gl\";\r\nimport firebase from \"firebase/app\";\r\n//import MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker'\r\n\r\n//const worker = new Worker('./worker.js')\r\n\r\n//mapbox.workerClass = MapboxWorker\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n        \"pk.eyJ1IjoiamFpZGV2djk5OSIsImEiOiJja25vcHhkNjExYmR4MnZwcmU3MG9wd2hlIn0.YV5iqi1TiI1nSWQd-bQBmA\",\r\n});\r\n\r\nconst locationStyle = {\r\n    backgroundColor: \"green\",\r\n    borderRadius: \"50%\",\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    border: \"4px solid lightgreen\",\r\n};\r\n\r\nconst markStyle = {\r\n    backgroundColor: \"#e74c3c\",\r\n    borderRadius: \"50%\",\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    border: \"4px solid #eaa29b\",\r\n};\r\n\r\nconst ReactMapbox = () => {\r\n    const [showPopup, togglePopup] = useState(true);\r\n\r\n    const [location, setLocation] = useState({\r\n        latitude: 0,\r\n        longitude: 0,\r\n    });\r\n\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((e) => {\r\n            setLocation({\r\n                longitude: e.coords.longitude,\r\n                latitude: e.coords.latitude,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        firebase\r\n            .database()\r\n            .ref(\"location\")\r\n            .on(\"value\", async (snapshot) => {\r\n                if (snapshot.val() !== null) {\r\n                    const result = await Object.keys(snapshot.val()).map(\r\n                        (key) => snapshot.val()[key]\r\n                    );\r\n                    console.log(result);\r\n                    setMarkers(result);\r\n                } else {\r\n                    console.log(\"The Snapshot is null\");\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            navigator.geolocation.getCurrentPosition((e) => {\r\n                firebase\r\n                    .database()\r\n                    .ref()\r\n                    .child(\"location\")\r\n                    .child(navigator.productSub)\r\n                    .set(\r\n                        {\r\n                            currentLocation: {\r\n                                longitude: e.coords.longitude,\r\n                                latitude: e.coords.latitude,\r\n                            },\r\n                        },\r\n                        (err) => {\r\n                            if (err) {\r\n                                console.log(\r\n                                    \"Error Occured while sending the location !\",\r\n                                    err\r\n                                );\r\n                            } else {\r\n                                console.log(\"Location send !\");\r\n                            }\r\n                        }\r\n                    );\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <Map\r\n            style=\"mapbox://styles/mapbox/streets-v8\"\r\n            containerStyle={{\r\n                height: \"100vh\",\r\n                width: \"100%\",\r\n            }}\r\n            center={[location.longitude, location.latitude]}\r\n            movingMethod=\"jumpTo\"\r\n        >\r\n            <Marker coordinates={[location.longitude, location.latitude]}>\r\n                <div style={locationStyle}></div>\r\n            </Marker>\r\n            {markers.map((m) => (\r\n                <Marker\r\n                    coordinates={[\r\n                        m.currentLocation.longitude,\r\n                        m.currentLocation.latitude,\r\n                    ]}\r\n                >\r\n                    <div style={markStyle}></div>\r\n                </Marker>\r\n            ))}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default ReactMapbox;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\n//import App from \"./components/App.js\";\r\n//import ReactMap from \"./components/ReactMap.js\";\r\nimport ReactMapbox from \"./components/ReactMapbox.js\";\r\n\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyBa03yaOEGCwaL-G6v95ppgGS6lyvoFSVk\",\r\n    authDomain: \"react-native-chikchak-firebase.firebaseapp.com\",\r\n    databaseURL: \"https://react-native-chikchak-firebase.firebaseio.com\",\r\n    projectId: \"react-native-chikchak-firebase\",\r\n    storageBucket: \"react-native-chikchak-firebase.appspot.com\",\r\n    messagingSenderId: \"240714601094\",\r\n    appId: \"1:240714601094:web:8c6220a15fb6c630407707\",\r\n    measurementId: \"G-K4J3S1NSR9\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(<ReactMapbox />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}